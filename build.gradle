plugins {
    id 'org.springframework.boot' version '2.5.5' // 인텔리제이에서 버전관리를 해주기에 버전만 변경해줘도 쉽게 가능
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies { // 의존관계
    // 버전이 없는 이유는 스프링 부트에서 자체적으로 지원해주기 때문에.
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web' // 필요한 의존관계들을 전부 가져옴.
    implementation 'org.springframework.boot:spring-boot-devtools' // 팁! 서버를 리로드 하지 않아도 템플릿을 업데이트 할 수 있다.
    // 스프링 부트에서 지원해주지 않기 때문에 버전을 적용시켜놓아야 한다.
    implementation 'com.github.gavlyukovskiy:flexy-pool-spring-boot-starter:1.7.1' // 팁! 쿼리 파라미터를 확인할 수 있다.
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //JUnit4 추가. (강의는 4를 사용)
    testImplementation("org.junit.vintage:junit-vintage-engine") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
}

test {
    useJUnitPlatform()
}
